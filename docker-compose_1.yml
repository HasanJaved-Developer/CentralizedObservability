services:
  api:
    build:
      context: .
      dockerfile: CentralizedLoggingApi/Dockerfile
    container_name: centralized_logging_api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      # Jaeger (OpenTelemetry.Jaeger exporter)
      - JAEGER_HOST=jaeger
      - JAEGER_PORT=6831
    ports:
      - "5000:8080"
      - "5001:8081"
    depends_on:
      db:
        condition: service_healthy
      jaeger:
        condition: service_started
    volumes:
      - ./CentralizedLoggingApi/logs:/app/logs

  userapi:
    build:
      context: .
      dockerfile: UserManagementApi/Dockerfile
    container_name: user_management_api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      # Jaeger (OpenTelemetry.Jaeger exporter)
      - JAEGER_HOST=jaeger
      - JAEGER_PORT=6831
    ports:
      - "6000:8080"
    depends_on:
      db:
        condition: service_healthy
      jaeger:
        condition: service_started
    volumes:
      - ./UserManagementApi/logs:/app/logs

  web:
    build:
      context: .
      dockerfile: ApiIntegrationMvc/Dockerfile
    container_name: api_integration_web
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      # APIs base URLs (service DNS names provided by Compose)
      - Services__CentralizedLogging__BaseUrl=http://api:8080
      - Services__UserManagement__BaseUrl=http://userapi:8080
      # Jaeger (OpenTelemetry.Jaeger exporter)
      - JAEGER_HOST=jaeger
      - JAEGER_PORT=6831
    ports:
      - "7000:8080"  # browse http://localhost:7000
    depends_on:
      api:
        condition: service_started
      userapi:
        condition: service_started
      jaeger:
        condition: service_started

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: centralized_logging_db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Bisp@123
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost,1433 -U sa -P 'Bisp@123' -C -Q \"SELECT 1\""]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    volumes:
      - sql_data:/var/opt/mssql

  # ðŸ”Ž Jaeger (all-in-one: UI + collector + agent + storage)
  jaeger:
    image: jaegertracing/all-in-one:1.57
    container_name: jaeger
    ports:
      - "16686:16686"     # Jaeger UI -> http://localhost:16686
      - "6831:6831/udp"   # Jaeger agent (UDP) for Jaeger exporter

volumes:
  sql_data:
